<Window x:Class="VX.Desktop.Windows.LogOnWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:PopupHostControl="clr-namespace:VX.Desktop.Controls.PopupHostControl"
        Title=""
        FocusManager.FocusedElement="{Binding ElementName=loginBox}"
        Icon="/Icons/tray.ico"
        ShowInTaskbar="True"
        WindowStyle="None" 
        AllowsTransparency="True" 
        ResizeMode="NoResize"
        Background="Transparent"
        Height="230" 
        Width="300"
        WindowStartupLocation="CenterScreen"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:Infrastructure="clr-namespace:VX.Desktop.Infrastructure"
        xmlns:LoadingControl="clr-namespace:VX.Desktop.Controls.LoadingControl" mc:Ignorable="d">
    <Window.Resources>
        <BooleanToVisibilityConverter x:Key="booleanToVisibilityConverter" />
        <Infrastructure:InverseBooleanToVisibilityConverter x:Key="inverseBooleanToVisibilityConverter" />
        <Style x:Key="inputField" >
            <Setter Property="TextBox.OverridesDefaultStyle" Value="True"/>
            <Setter Property="TextBox.FocusVisualStyle" Value="{x:Null}"/>
            <Setter Property="TextBox.VerticalAlignment" Value="Center"/>
            <Setter Property="TextBox.FontStyle" Value="Italic"/>
            <Setter Property="TextBox.FontWeight" Value="Bold"/>
            <Setter Property="TextBox.FontSize" Value="22"/>
            <Setter Property="TextBox.Foreground" Value="#FF5482A1" />
            <Setter Property="TextBox.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Border Name="Border" CornerRadius="5" BorderBrush="Black" BorderThickness="1" >
                            <ScrollViewer Margin="5" x:Name="PART_ContentHost"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter TargetName="Border" Property="BorderBrush" Value="White"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="inputLabel" TargetType="Label">
            <Setter Property="Padding" Value="0" />
            <Setter Property="VerticalAlignment" Value="Center" />
            <Setter Property="FontSize" Value="16" />
        </Style>
    </Window.Resources>
    <Border>
        <Grid x:Name="uiGridMain" Margin="10">
            <Border Style="{StaticResource MainGridBorder}">
            </Border>
            <Grid Margin="5,0,12,0">
                <Grid.RowDefinitions>
                    <RowDefinition Height="18" />
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="42" />
                </Grid.ColumnDefinitions>                
                <PopupHostControl:SlickToggleButton CornerRadius="0,0,4,0" x:Name="CloseButton" Style="{StaticResource SlickButton}" 
                                           HighlightBackground="Crimson" Content="X" Command="{Binding Path=SkipCommand}" Grid.Row="1" 
                                           FontWeight="Bold" Foreground="#FFFFFFFF" Grid.Column="1"/>
            </Grid>
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="33"/>
                    <RowDefinition Height="*" />
                </Grid.RowDefinitions>
                <Label Margin="5,4,79,0" x:Name="TitleLabel" Foreground="White" Opacity="0.9" Content="Log on"/>
                <PopupHostControl:HorizontalSeparator d:LayoutOverrides="HorizontalAlignment" Grid.Row="1"/>
                <StackPanel x:Name="MainContent" Grid.Row="2" Margin="10,10,10,10">
                    <Grid Visibility="{Binding Path=IsLogonInProgress, Converter={StaticResource inverseBooleanToVisibilityConverter}}">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="50" />
                            <RowDefinition Height="50" />
                            <RowDefinition />
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="80" />
                            <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>
                        <Label Content="Login" Style="{StaticResource inputLabel}" />
                        <TextBox x:Name="loginBox" Text="{Binding Path=UserInput, UpdateSourceTrigger=PropertyChanged}"
                            KeyDown="LogonInput" Grid.Row="0" Grid.Column="1"
                            Style="{StaticResource inputField}" />

                        <Label Content="Password" Style="{StaticResource inputLabel}" Grid.Row="1" Grid.Column="0" />
                        <PasswordBox PasswordChanged="PasswordChanged"
                            KeyDown="LogonInput" Grid.Row="1" Grid.Column="1" 
                            Style="{StaticResource inputField}"/>
                        <TextBlock Grid.Row="2" Grid.Column="0" Margin="0,30,0,0">
                            <Hyperlink NavigateUri="{Binding Path=RegisterUrl}" Click="RegisterHandler">
                                <TextBlock Text="{Binding Path=RegisterText}"/>
                            </Hyperlink>
                        </TextBlock>
                        <Button HorizontalAlignment="Right" Width="80" Content="{Binding Path=LogonText}"
                                Grid.Row="2" Grid.Column="1" Command="{Binding Path=LogonCommand}" />
                    </Grid>                    
                    <LoadingControl:LoadingAnimation 
                        Visibility="{Binding Path=IsLogonInProgress, Converter={StaticResource booleanToVisibilityConverter}}"
                        Margin="0,20,0,0"/>
                </StackPanel>
            </Grid>
        </Grid>
    </Border>
</Window>
